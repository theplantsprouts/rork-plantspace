rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /profiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other profiles
    }
    
    // Posts rules - more permissive for debugging
    match /posts/{postId} {
      // Anyone authenticated can read posts
      allow read: if request.auth != null;
      
      // Allow authenticated users to create posts with flexible validation
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.author_id;
      
      // Only the author can update/delete their posts
      allow update, delete: if request.auth != null && 
                           request.auth.uid == resource.data.author_id;
    }
    
    // Push tokens - users can only manage their own tokens
    match /push_tokens/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Comments (if you add them later)
    match /comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                           request.auth.uid == resource.data.author_id;
    }
    
    // Likes/reactions (if you add them later)
    match /likes/{likeId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null && 
                           request.auth.uid == resource.data.user_id;
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
                        request.auth.uid == resource.data.user_id;
    }
    
    // Analytics events (write-only for authenticated users)
    match /analytics/{eventId} {
      allow create: if request.auth != null;
    }
  }
}